
buildscript {
    ext {
        springBootVersion = '1.2.2.RELEASE'
    }
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 

jar {
    baseName = 'myvote'
    version = '0.1.0'
}
//sourceCompatibility = 1.7
//targetCompatibility = 1.7

repositories {
    mavenCentral()
    maven {url "http://repo.spring.io/release"}
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-security")
    testCompile("org.springframework.boot:spring-boot-starter-test") 
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
	//compile("org.springframework.boot:spring-boot-starter-web:1.2.1.RELEASE")
	//testCompile("org.springframework.boot:spring-boot-starter-test")
	//compile("org.scala-lang:scala-library:2.11.4")
	//compile("org.springframework.boot:spring-boot-starter-data-rest")
	compile("org.webjars:bootstrap:3.1.1")
	testCompile("junit:junit")
	//compile("org.springframework.boot:spring-boot-starter-security")
	compile( 'org.apache.kafka:kafka_2.11:0.8.2.1')
	compile ('org.springframework:spring-context-support:4.1.5.RELEASE')
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

configurations.all{

 exclude module: 'slf4j-log4j12' 
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}